// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SUT23_Projekt___Avancerad_.NET.Data;

#nullable disable

namespace SUT23_Projekt___Avancerad_.NET.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240519114016_Initial Create")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassLibary.Appointment", b =>
                {
                    b.Property<int>("AppointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointId"));

                    b.Property<int>("AppointmentDurationMinutes")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("StartingTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AppointId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            AppointId = 1,
                            AppointmentDurationMinutes = 60,
                            CompanyId = 1,
                            CreationDate = new DateTime(2024, 5, 18, 11, 40, 16, 410, DateTimeKind.Utc).AddTicks(5431),
                            CustomerId = 1,
                            Description = "Meeting to discuss project requirements.",
                            StartingTime = new DateTime(2024, 5, 24, 11, 40, 16, 410, DateTimeKind.Utc).AddTicks(5430),
                            Title = "Consultation Meeting",
                            UpdateDate = new DateTime(2024, 5, 19, 11, 40, 16, 410, DateTimeKind.Utc).AddTicks(5434)
                        },
                        new
                        {
                            AppointId = 2,
                            AppointmentDurationMinutes = 30,
                            CompanyId = 2,
                            CreationDate = new DateTime(2024, 5, 17, 11, 40, 16, 410, DateTimeKind.Utc).AddTicks(5437),
                            CustomerId = 2,
                            Description = "Review of the initial design drafts.",
                            StartingTime = new DateTime(2024, 5, 26, 11, 40, 16, 410, DateTimeKind.Utc).AddTicks(5436),
                            Title = "Design Review",
                            UpdateDate = new DateTime(2024, 5, 19, 11, 40, 16, 410, DateTimeKind.Utc).AddTicks(5437)
                        });
                });

            modelBuilder.Entity("ClassLibary.ChangeLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppointId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChangedAtDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChangeLogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Action = "Created",
                            AppointId = 1,
                            ChangedAtDate = new DateTime(2024, 5, 19, 11, 40, 16, 410, DateTimeKind.Utc).AddTicks(5454),
                            CompanyId = 1,
                            CustomerId = 1,
                            Details = "Appointment created for John Wall"
                        },
                        new
                        {
                            Id = 2,
                            Action = "Created",
                            AppointId = 2,
                            ChangedAtDate = new DateTime(2024, 5, 19, 11, 40, 16, 410, DateTimeKind.Utc).AddTicks(5456),
                            CompanyId = 2,
                            CustomerId = 2,
                            Details = "Appointment created for Mary Jane"
                        });
                });

            modelBuilder.Entity("ClassLibary.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            CompanyEmail = "info@techsolutions.com",
                            CompanyName = "Tech Solutions Inc.",
                            UserId = 1
                        },
                        new
                        {
                            CompanyId = 2,
                            CompanyEmail = "contact@innovativedesigns.com",
                            CompanyName = "Innovative Designs LLC",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("ClassLibary.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CreationDate = new DateTime(2024, 5, 9, 11, 40, 16, 410, DateTimeKind.Utc).AddTicks(5352),
                            Email = "john.wall@hotmail.com",
                            FirstName = "John",
                            LastName = "Wall",
                            Phone = "+4634567890",
                            UpdateDate = new DateTime(2024, 5, 19, 11, 40, 16, 410, DateTimeKind.Utc).AddTicks(5359),
                            UserId = 2
                        },
                        new
                        {
                            CustomerId = 2,
                            CreationDate = new DateTime(2024, 5, 11, 11, 40, 16, 410, DateTimeKind.Utc).AddTicks(5361),
                            Email = "mary.jane@hotmail.com",
                            FirstName = "Mary",
                            LastName = "Jane",
                            Phone = "+4698765432",
                            UpdateDate = new DateTime(2024, 5, 19, 11, 40, 16, 410, DateTimeKind.Utc).AddTicks(5362),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ClassLibary.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            PasswordHash = "password123",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            PasswordHash = "hejhej456",
                            Role = "User",
                            Username = "user1"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            PasswordHash = "user2",
                            Role = "User",
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("ClassLibary.Appointment", b =>
                {
                    b.HasOne("ClassLibary.Company", "Company")
                        .WithMany("Appointments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassLibary.Customer", "Customer")
                        .WithMany("Appointments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ClassLibary.Company", b =>
                {
                    b.HasOne("ClassLibary.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClassLibary.Customer", b =>
                {
                    b.HasOne("ClassLibary.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClassLibary.Company", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("ClassLibary.Customer", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
